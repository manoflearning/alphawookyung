#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n;
string s, ans;
vt<int> adj[505050];
int dep[505050], mxdep;

void input() {
    cin >> n >> s;
    s.push_back('a');
    FOR(i, n - 1, -1, -1)
        s[i + 1] = s[i];

    ans.resize(n + 1);
    
    FOR(n - 1) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
}

void bfs() {
    queue<int> q;

    q.push(1);
    dep[1] = 1;
    ans[1] = s[1];

    while (sz(q)) {
        int v = q.front();
        q.pop();

        mxdep = max(mxdep, dep[v]);
        if (s[v] < ans[dep[v]]) continue;

        EACH(i, adj[v]) {
            if (dep[i]) continue;
            q.push(i);
            dep[i] = dep[v] + 1;
            ans[dep[i]] = max(ans[dep[i]], s[i]);
        }
    }
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	input();

    bfs();

    FOR(i, 1, mxdep + 1) 
        cout << ans[i];

	return 0;
}