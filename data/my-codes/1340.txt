
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

int n;
int W[10][10];
vector<bool> everBeen(10, false);

int tsp(int lastCity);

int main() {
	scanf("%d", &n);

	for (int i = 0; i < n; i++)
		for (int l = 0; l < n; l++) {
			scanf("%d", &W[i][l]);
		}

	everBeen[0] = true;
	int res = tsp(0);

	printf("%d", res);

	return 0;
}

int tsp(int lastCity) {
	int res = 1000000000;
	bool truism = true;
	for (int i = 1; i < n; i++) {
		if (everBeen[i] == false) {
			truism = false; 

			if (W[lastCity][i] != 0) {
				everBeen[i] = true;

				int sam = tsp(i);
				sam += W[lastCity][i];

				everBeen[i] = false;

				res = min(res, sam);
			}
		}
	}
	if (truism)
		if (W[lastCity][0] != 0) return W[lastCity][0];
		else return 1000000000;
	return res;
}
