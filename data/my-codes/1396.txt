#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, m, dist[202020], deg[202020], cnt[202020];
vt<int> adj[202020];

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int n; cin >> n;
    FOR(i, 1, n + 1) { 
        while (1) { 
            int x; cin >> x; 
            if (x == 0) break; 
            adj[i].push_back(x);
            deg[i]++;
        }
    }

    memset(dist, -1, sizeof(dist));

    queue<int> q;
    cin >> m;
    FOR(m) {
        int x; cin >> x;
        q.push(x);
        dist[x] = 0;
    }

    while (sz(q)) {
        int now = q.front();
        q.pop();
        EACH(i, adj[now]) {
            cnt[i]++;
            if (dist[i] == -1 && (deg[i] + 1) / 2 <= cnt[i]) { 
                q.push(i);
                dist[i] = dist[now] + 1;
            }
        }
    }

    FOR(i, 1, n + 1) cout << dist[i] << ' ';

	return 0;
}