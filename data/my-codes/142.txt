#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

struct idk {
    int C;
    vt<ll> P, W;
    ll B;
};

ll n, m, q;
vt<idk> a;
vt<ll> eW;
ll eB;
ll cnt[2020], sum;

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	cin >> n >> m >> q;
    a.resize(m);
    EACH(i, a) {
        cin >> i.C;
        i.P.resize(i.C);
        i.W.resize(i.C);
        EACH(j, i.P) cin >> j;
        EACH(j, i.W) cin >> j;
        cin >> i.B;
    }

    eW.resize(m);
    EACH(i, eW) cin >> i;
    cin >> eB;

    FOR(i, m) {
        auto& x = a[i];
        FOR(j, x.C) cnt[x.P[j]] += x.W[j] * eW[i];
        sum += x.B * eW[i];
    }
    sum += eB;

    while (q--) {
        ll ans = sum;
        FOR(n) {
            ll x; cin >> x;
            ans += cnt[i + 1] * x;
        }
        cout << ans << '\n';
    }

	return 0;
}