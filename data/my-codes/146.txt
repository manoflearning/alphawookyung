#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

ll gcd(ll a, ll b) {
	if (b == 0) return a;
	else return gcd(b, a % b);
}

ll lcm(ll a, ll b) {
	return a * b / gcd(a, b);
}

ll lcm2(ll a, ll b, ll c) {
    return lcm(lcm(a, b), c);
}

ll cal(int n) {
    ll ans = 0;
    ans = max(ans, lcm2(n, n - 1, n - 2));
    ans = max(ans, lcm2(n, n - 1, n - 3));
    ans = max(ans, lcm2(n, n - 1, n - 4));
    ans = max(ans, lcm2(n, n - 2, n - 3));
    ans = max(ans, lcm2(n, n - 2, n - 4));
    ans = max(ans, lcm2(n, n - 3, n - 4));
    ans = max(ans, lcm2(n - 1, n - 2, n - 3));
    ans = max(ans, lcm2(n - 1, n - 2, n - 4));
    ans = max(ans, lcm2(n - 1, n - 3, n - 4));
    ans = max(ans, lcm2(n - 2, n - 3, n - 4));
    return ans;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

    int tc; cin >> tc;
    while (tc--) {
        int n;
        cin >> n;    

        cout << cal(n) << '\n';
    }

	return 0;
}