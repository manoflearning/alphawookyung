#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

struct hidx {
	ll h, idx;
};

int n;
vt<ll> h;

void init() {
	h.clear();
}

void input() {
	h.resize(n);
	FOR(n) cin >> h[i];
}

ll f() {
	ll ret = 0;
	stack<hidx> stk;

	stk.push({ -1, -1 });
	FOR(i, 0, n) {
		while (stk.top().h > h[i]) {
			ll mnh = stk.top().h;
			stk.pop();

			ret = max(ret, mnh * (i - stk.top().idx - 1));
		}
		
		stk.push({ h[i], i });
	}

	while (stk.top().h > -1) {
		ll mnh = stk.top().h;
		stk.pop();

		ret = max(ret, mnh * (n - stk.top().idx - 1));
	}
	
	return ret;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	while (1) {
		init();

		cin >> n;
		if (!n) break;

		input();

		cout << f() << '\n';
	}

	return 0;
}
