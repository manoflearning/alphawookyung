#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, m, k, cnt[101010], ind[101010];
vt<int> dag[101010], rdag[101010];
set<int> vi[101010];

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	cin >> n >> m >> k;
    FOR(m) {
        int u, v;
        cin >> u >> v;
        dag[u].push_back(v);
        ind[v]++;
        rdag[v].push_back(u);
    }

    int ans = 1;
    FOR(k) {
        int op, v;
        cin >> op >> v;
        if (op == 1) {

            if (sz(vi[v]) < ind[v]) { ans = 0; break; }

            cnt[v]++;
            if (cnt[v] == 1) {
                EACH(i, dag[v]) vi[i].insert(v);
            }
        }
        else {
            if (!cnt[v]) { ans = 0; break; }

            cnt[v]--;
            if (!cnt[v]) {
                EACH(i, dag[v]) vi[i].erase(v);
            }
        }
    }

    cout << (ans ? "King-God-Emperor" : "Lier!");

	return 0;
}