#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };
const char d[] = { 'B', 'L', 'D' };

int n, dp[1505][1505][3];
string s;

void init() {
    FOR(1505) {
        FOR(j, 1505) {
            FOR(k, 3) dp[i][j][k] = -1;
        }
    }
}

int f(int l, int r, int x) {
    int& ret = dp[l][r][x % 3];
    if (ret != -1) return ret;
    if (l > r) return ret = 0;

    ret = 0;
    if (s[l] == d[x % 3]) ret = max(ret, f(l + 1, r, x + 1) + 1);
    if (s[r] == d[x % 3]) ret = max(ret, f(l, r - 1, x + 1) + 1); 
    
    return ret;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

    init();

    cin >> n >> s;

    int ans = 0;
    FOR(i, sz(s)) {
        FOR(j, i, sz(s)) {
            ans = max(ans, f(i, j, 0));
        }
    }

    cout << ans;

	return 0;
}