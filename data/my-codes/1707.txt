#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, a[1010][1010], dp[1010][1010][3];

void init() {
    FOR(1010) {
        FOR(j, 1010) {
            FOR(k, 3) {
                dp[i][j][k] = -1;
            }
        }
    }
}

void input() {
    cin >> n;
    FOR(n) {
        FOR(j, n) {
            cin >> a[i][j];
        }
    }
}

int f(int y, int x, int b) {
    int& ret = dp[y][x][b];
    if (ret != -1) return ret;
    if (y >= n || x >= n) return ret = 0;
    
    ret = 0;
    ret = max(ret, f(y + 1, x, b));
    ret = max(ret, f(y, x + 1, b));
    if (a[y][x] == b) ret = max(ret, f(y + 1, x, (b + 1) % 3) + 1);
    if (a[y][x] == b) ret = max(ret, f(y, x + 1, (b + 1) % 3) + 1);

    return ret;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

    init();

    input();

	cout << f(0, 0, 0);

	return 0;
}