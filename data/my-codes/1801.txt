#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, m, ind[404040], l, visited[404040];
vt<int> adj[404040], y;
set<int> ans;

void input() {
    cin >> n >> m;
    FOR(m) {
        int k; cin >> k;

        vt<int> a(k);
        EACH(j, a) cin >> j;

        int r; cin >> r;
        EACH(j, a) adj[j].push_back(n + i + 1);
        adj[n + i + 1].push_back(r);

        ind[n + i + 1] = k;
    }

    cin >> l;
    y.resize(l);
    EACH(i, y) cin >> i;
}

void f() {
    queue<int> q;

    EACH(i, y) {
        q.push(i);
        visited[i] = 1;
    }

    while (sz(q)) {
        int v = q.front();
        q.pop();

        if (v <= n) ans.insert(v);

        EACH(i, adj[v]) {
            if (i > n) ind[i]--;

            if (visited[i]) continue;

            if (!ind[i]) {
                q.push(i);
                visited[i] = 1;
            }
        }
    }
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

    input();

    f();

    cout << sz(ans) << '\n';
    EACH(i, ans) cout << i << ' ';

	return 0;
}