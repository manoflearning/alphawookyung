#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

ll n, l, r, x;
ll a[22], ans;

vector<ll> res;
void bt(int idx, ll sum) {
    if (idx == n + 1) {
        if (l <= sum && sum <= r && sz(res) && res.back() - res.front() >= x) ans++;
        return;
    }

    bt(idx + 1, sum);
    res.push_back(a[idx]);
    bt(idx + 1, sum + a[idx]);
    res.pop_back();
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	cin >> n >> l >> r >> x;
    for (int i = 1; i <= n; i++) cin >> a[i];

    sort(a + 1, a + n + 1);

    bt(1, 0);

    cout << ans;

	return 0;
}