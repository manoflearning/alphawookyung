#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

ll p10[17];

int digit(ll x) {
    ll i, j;
    for (i = 1, j = 1; i <= x; i *= 10, j++);
    return j - 1;
}

ll f(ll x) {
    if (x < 10) return x * (x + 1) / 2;

    ll ret = 0;

    ll d = digit(x), msb = x / p10[d - 1];
    
    FOR(msb) ret += i * p10[d - 1];
    ret += msb * (x % p10[d - 1] + 1);
    
    ret += msb * f(p10[d - 1] - 1);
    ret += f(x % p10[d - 1]);

    return ret;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);
	
    p10[0] = 1;
    FOR(i, 1, 17) p10[i] = 10 * p10[i - 1];

	int tc; cin >> tc;

    FOR(tc) {
        ll a, b;
        cin >> a >> b;

        cout << f(b) - (a > 0 ? f(a - 1) : 0) << '\n';
    }

	return 0;
}