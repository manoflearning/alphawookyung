#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, m;
ll c[5050], p[5050], dp[10101];

void init() {
    memset(dp, 0, sizeof(dp));
}

int input() {
    double x;
    cin >> n >> x;
    m = x * 100 + 0.5;

    if (n == 0 && m == 0) return 0;

    FOR(n) {
        double x;
        cin >> c[i] >> x;
        p[i] = x * 100 + 0.5;
    }

    return 1;
}

ll f() {
    FOR(m + 1) {
        FOR(j, n) {
            if (i - p[j] >= 0) {
                dp[i] = max(dp[i], dp[i - p[j]] + c[j]);
            }
        }
    }

    ll ret = 0;
    FOR(m + 1) ret = max(ret, dp[i]);

    return ret;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

    while (1) {
        init();

        if (!input()) break;

        cout << f() << '\n';
    }

	return 0;
}