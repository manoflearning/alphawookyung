#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

struct Team {
    ll a, b;
    bool operator<(const Team& rhs) const {
        return b - a > rhs.b - rhs.a;
    }
};

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	while (1) {
        int n, suma, sumb;
        cin >> n >> suma >> sumb;
        if (n == 0) break;

        vt<Team> arr(1, { 0, 0 });
        FOR(n) {
            int cnt; cin >> cnt;
            ll da, db;
            cin >> da >> db;
            while (cnt--) {
                arr.push_back({ da, db });
            }
        }

        sort(arr.begin() + 1, arr.end());

        vt<ll> psa(sz(arr)), psb(sz(arr));
        FOR(i, 1, sz(arr)) {
            psa[i] = psa[i - 1] + arr[i].a;
            psb[i] = psb[i - 1] + arr[i].b;
        }

        ll ans = 1e18;
        FOR(i, 1, sz(arr) + 1) {
            if (suma < i - 1) continue;
            if (sumb < sz(arr) - i) continue;
            
            ans = min(ans, psa[i - 1] + psb[sz(arr) - 1] - psb[i - 1]);
        }

        cout << ans << '\n';
    }

	return 0;
}