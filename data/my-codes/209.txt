#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, pc[1010101];
vector<pii> a;
vector<int> p[1010101], q[1010101];
priority_queue<int, vector<int>, greater<int>> pq;
int mx = 0, cnt[101010];

void input() {
    cin >> n;
    a.resize(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i].fr >> a[i].sc;
        p[a[i].fr].push_back(i);
        q[a[i].sc].push_back(i);
    }
}

void solve() {
    for (int i = 1; i <= n; i++) pq.push(i);

    for (int i = 0; i <= 1000000; i++) {
        for (auto j : q[i]) {
            pq.push(pc[j]);
        }

        for (auto j : p[i]) {
            pc[j] = pq.top();
            cnt[pq.top()]++;
            pq.pop(); 
        }

        mx = max(mx, n - (int)pq.size());
    }
}

void output() {
    cout << mx << '\n';
    for (int i = 1; i <= mx; i++) 
        cout << cnt[i] << ' ';
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	input();

    solve();
    
    output();

	return 0;
}