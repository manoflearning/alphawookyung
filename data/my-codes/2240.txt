#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n, k;
vt<ll> a;

ll cal(ll val) {
	ll mn = 1e18, mx = -1e18;
			
	FOR(i, n) {
		ll l = 1, r = k;
		while (l < r) {
			ll mid = (l + r + 1) >> 1;
			if (a[i] / mid >= val) l = mid;
			else r = mid - 1;
		}

		ll res = a[i] / l;
				
		mn = min(mn, res);
		mx = max(mx, res);
	}

	return mx - mn;
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int tc; cin >> tc;
    FOR(tt, 1, tc + 1) {
		cin >> n >> k;
		a.resize(n);
		EACH(i, a) cin >> i;

		vt<ll> res;
		FOR(i, 1, k + 2) {
			res.push_back(a[0] / i);
		}
		sort(all(res));
		res.erase(unique(all(res)), res.end());

		ll ans = 1e18;
		EACH(i, res) ans = min(ans, cal(i));
		cout << ans << '\n';
    }

	return 0;
}