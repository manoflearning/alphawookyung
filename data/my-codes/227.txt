#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vi vector<int>
#define vvi vector<vector<int>>

const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1 };
const int dx[] = { 1, -1, 0, 0 };

int n, ans;
vvi a(20, vi(20));

void input() {
    cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> a[i][j];
            ans = max(ans, a[i][j]);
        }
    }
}

void f3(const vvi& b, int num) {
    if (num == 1) {
        for (int y = 0; y < n; y++) {
            for (int x = 0; x < n; x++) {
                a[y][x] = b[y][x];
            }
        }
    }
    else if (num == 2) {
        for (int y = 0; y < n; y++) {
            for (int x = 0; x < n; x++) {
                a[y][n - x - 1] = b[y][x];
            }
        }
    }
    else if (num == 3) {
        for (int y = 0; y < n; y++) {
            for (int x = 0; x < n; x++) {
                a[x][y] = b[y][x];
            }
        }
    }
    else if (num == 4) {
        for (int y = 0; y < n; y++) {
            for (int x = 0; x < n; x++) {
                a[x][n - y - 1] = b[y][x];
            }
        }
    }
}

int f2(int l) {
    int ret = 0, mx = 0;
    
    for (int y = 0; y < n; y++) {
        int prv = 0, idx;
        for (int x = 0; x < n; x++) {
            mx = max(mx, a[y][x]);
            if (a[y][x] && !prv) {
                prv = a[y][x], idx = x;
            }
            else if (a[y][x] && prv) {
                if (prv == a[y][x]) {
                    a[y][idx] <<= 1;
                    a[y][x] = prv = 0;
                    
                    ret = 1;
                    ans = max(ans, a[y][idx]);
                }
                if (prv != a[y][x]) {
                    prv = a[y][x], idx = x;
                }
            }
        }
    }
    
    if ((mx << l) <= ans) return 0;
    
    for (int y = 0; y < n; y++) {
        vi c;
        for (int x = 0; x < n; x++) {
            if (x < n - 1 && !a[y][x] && a[y][x + 1]) ret = 1;
            if (a[y][x]) {
                c.push_back(a[y][x]);
                a[y][x] = 0;
            }
        }
        for (int x = 0; x < (int)c.size(); x++) {
            a[y][x] = c[x];
        }
    }
    
    return ret;
}

void f(int cnt) {