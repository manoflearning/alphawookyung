#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int tc; cin >> tc;
	FOR(tt, 1, tc + 1) {
		int n, q;
        cin >> n >> q;

        vt<ll> a(n);
        EACH(i, a) cin >> i;

        vt<ll> div;
        FOR(i, 1, n) {
            if (n % i == 0) div.push_back(i);
        }

        vt<ll> sum[sz(div)];

        ll ans = 0;
        FOR(j, sz(div)) {
            ll d = div[j];
            FOR(st, 0, d) {
                ll res = 0;
                FOR(i, st, n, d) {
                    res += a[i];
                }
                sum[j].push_back(d * res);
                ans = max(ans, sum[j].back());
            }
        }

        cout << ans << '\n';

        while (q--) {
            ll x, y;
            cin >> x >> y;
            x--;

            ans = 0;
            FOR(j, sz(div)) {
                ll d = div[j];
                FOR(st, 0, d) {
                    if ((x - st + d) % d) continue;
                    sum[j][st] += (y - a[x]) * d;
                    ans = max(ans, sum[j][st]);
                }
            }

            a[x] = y;

            cout << ans << '\n';
        }
	}

	return 0;
}