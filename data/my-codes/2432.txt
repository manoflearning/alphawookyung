#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int tc; cin >> tc;

    FOR(tc) {
        int n; cin >> n;
        vt<int> a(n + 1);
        FOR(n) cin >> a[i + 1];

        vt<int> cc;
        FOR(n) cc.push_back(a[i + 1]);
        sort(all(cc));
        cc.erase(unique(all(cc)), cc.end());

        FOR(i, 1, n + 1) {
            a[i] = lower_bound(all(cc), a[i]) - cc.begin() + 1;
        }

        int cn = sz(cc); 

        vt<int> last(cn + 1, -1), cnt(cn + 1);
        int mx = 1;
        int ansa = a[1], ansl = 1, ansr = 1;
        FOR(i, 1, n + 1) {
            int x = a[i];
            if (last[x] == -1) last[x] = i, cnt[x]++;
            else if (i - last[x] + 1 > 2 * cnt[x]) {
                last[x] = i;
                cnt[x] = 1;
            }
            else {
                cnt[x]++;
                if (mx < 2 * cnt[x] - (i - last[x] + 1)) {
                    mx = 2 * cnt[x] - (i - last[x] + 1);
                    ansa = x, ansl = last[x], ansr = i;
                }
            }
        }
        cout << cc[ansa - 1] << ' ' << ansl << ' ' << ansr << '\n';
    }

	return 0;
}