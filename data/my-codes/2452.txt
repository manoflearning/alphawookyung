#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

struct C {
    char c;
    ll idx, p;
    bool operator<(const C& rhs) const {
        return p < rhs.p;
    }
};

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int tc; cin >> tc;
    while (tc--) {
        string s; 
        ll p;
        cin >> s >> p;

        priority_queue<C> pq;
        ll sum = 0;
        FOR(i, sz(s)) {
            sum += s[i] - 'a' + 1;
            pq.push({ s[i], i, s[i] - 'a' + 1 });
        }

        while (sz(pq) && sum > p) {
            sum -= pq.top().p;
            pq.pop();
        }

        vt<C> a;
        while (sz(pq)) {
            a.push_back(pq.top());
            pq.pop();
        }

        sort(all(a), [&](C u, C v) {
            return u.idx < v.idx;
        });

        EACH(i, a) cout << i.c;
        cout << '\n';
    }

	return 0;
}