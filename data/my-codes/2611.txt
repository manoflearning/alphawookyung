#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int tc; cin >> tc;
	FOR(tt, 1, tc + 1) {
		int n; cin >> n;

        vt<int> cnt2(222);
        FOR(n) {
            int x; cin >> x;
            cnt2[x]++;
        }

        int ans = 0;

        for (int k = 1; k <= n; k++) {
            vt<int> cnt = cnt2;
            
            for (int i = 1; i <= k; i++) {
                int ub = k - i + 1, fi = 0;

                for (int j = ub; j >= 1; j--) {
                    if (cnt[j]) {
                        fi = 1, cnt[j]--;
                        break;
                    }
                }

                if (!fi) break;

                if (i == k) {
                    ans = k;
                    break;
                }

                for (int j = 1; j <= n; j++) {
                    if (cnt[j]) {
                        cnt[j]--, cnt[j + ub]++;
                        break;
                    }
                }
            }
        }

        cout << ans << '\n';
	}

	return 0;
}