#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);
    
	int tc; cin >> tc;
	FOR(tt, 1, tc + 1) {
        cout << "Case #" << tt << ": ";

		int n; cin >> n;

        vt<pll> a(n);
        EACH(i, a) cin >> i.fr >> i.sc;

        ll p2 = 0, sumy = 0, sumx = 0;
        EACH(i, a) {
            p2 = (p2 + i.fr * i.fr + i.sc * i.sc) % MOD;
            sumy = (sumy + i.fr) % MOD;
            sumx = (sumx + i.sc) % MOD;
        }

        int q; cin >> q;
        ll ans = 0;
        while (q--) {
            ll y, x;
            cin >> y >> x;
            
            ll res = p2;
            
            res = (res - 2 * sumy * y) % MOD;
            res = (res - 2 * sumx * x) % MOD;

            res += (n * y % MOD) * y % MOD;
            res %= MOD;
            res += (n * x % MOD) * x % MOD;
            res %= MOD;
            
            ans = (ans + res) % MOD;
        }

        cout << (ans + MOD) % MOD << '\n';
	}

	return 0;
}