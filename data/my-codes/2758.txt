#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

string s;
int psum[1010101][26];

void init() {
	for (int i = 1; i <= sz(s); i++) {
		for (int j = 0; j < 26; j++) {
			psum[i][j] = 0;
		}
	}
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	int tc; cin >> tc;
	FOR(tt, 1, tc + 1) {
		cout << "Case #" << tt << ": ";

		cin >> s;

		for (int i = 1; i <= sz(s); i++) {
			psum[i][s[i - 1] - 'a']++;
			for (int j = 0; j < 26; j++) {
				psum[i][j] += psum[i - 1][j];
			}
		}

		int ans = 0;

		int q; cin >> q;
		while (q--) {
			int l, r;
			cin >> l >> r;

			if ((r - l + 1) % 2 == 0) continue;

			int cnt1 = 0, cnt2 = 0;

			int mid = (l + r) >> 1;
			for (int i = 0; i < 26; i++) {
				cnt1 += abs((psum[mid][i] - psum[l - 1][i]) - (psum[r][i] - psum[mid][i]));
			}

			for (int i = 0; i < 26; i++) {
				cnt2 += abs((psum[mid - 1][i] - psum[l - 1][i]) - (psum[r][i] - psum[mid - 1][i]));
			}
			
			if (cnt1 == 1 || cnt2 == 1) ans++;
		}
		
		cout << ans << '\n';

		init();
	}

	return 0;
}