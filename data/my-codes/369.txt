
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first
#define sc second
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size() 

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

int n;
int d[22][22], dp[22][1 << 20];

int f(int x, int bit) {
    int& ret = dp[x][bit];
    if (ret != -1) return ret;
    if (x == n) return ret = 0;

    ret = INF;
    for (int i = 0; i < n; i++) {
        if (bit & (1 << i)) continue;
        ret = min(ret, d[x][i] + f(x + 1, bit | (1 << i)));
    }
    return ret;
}

int main() {

    cin.tie(NULL); cout.tie(NULL);
    ios_base::sync_with_stdio(false);

    cin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++) cin >> d[i][j];

    for (int i = 0; i < 22; i++)
        memset(dp[i], -1, sizeof(dp[i]));
    
    cout << f(0, 0);
}