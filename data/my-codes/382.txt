#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

struct node {
    ll x, y;
    bool operator<(const node& rhs) const {
        return x * rhs.y < rhs.x * y;
    }
};

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

    cout << fixed;
    cout.precision(9);

	int n; cin >> n;
    vt<ll> a(n);
    EACH(i, a) cin >> i;
    int m; cin >> m;

    double mn = INF;
    priority_queue<node> pq;
    EACH(i, a) {
        mn = min(mn, (double)i);
        pq.push({ i, 1 });
    }

    double ans = INF;
    while (m--) {
        ll x = pq.top().x, y = pq.top().y;
        pq.pop();

        ans = min(ans, (double)x / y - mn);

        pq.push({ x, y + 1 });
        mn = min(mn, (double)x / (y + 1));
    }
    ans = min(ans, (double)pq.top().x / pq.top().y - mn);

    cout << ans;

	return 0;
}