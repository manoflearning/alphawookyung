struct Point {
    ll x, y;
    bool operator<(const Point& rhs) const {
        return x ^ rhs.x ? x < rhs.x : y < rhs.y;
    }
};

const Point o = { 0, 0 };
vector<Point> p;

ll ccw(const Point& a, const Point& b, const Point& c) {
    ll res = (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);
    return (res > 0 ? 1 : (res < 0 ? -1 : 0));
}
inline ll dist(const Point& v) { return v.x * v.x + v.y * v.y; }

void sortByAngular() {
    sort(p.begin(), p.end(), [&](const Point& lhs, const Point& rhs) {
        if ((lhs < o) ^ (rhs < o)) return (lhs < o) < (rhs < o);
        if (ccw(o, lhs, rhs)) return ccw(o, lhs, rhs) > 0;
        return dist(lhs) < dist(rhs);
    });
}