ll gcd(ll a, ll b) {
	if (b == 0) return a;
	else return gcd(b, a % b);
}
ll lcm(ll a, ll b) {
	return a * b / gcd(a, b);
}

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pll pair<ll, ll>
pair<pll, ll> egcd(ll a, ll b) { 
	ll s = 0, olds = 1;
	ll t = 1, oldt = 0;
	ll r = b, oldr = a;
	while (r != 0) {
		ll q = oldr / r;
		ll tmp = oldr - q * r;
		oldr = r, r = tmp;
		tmp = olds - q * s;
		olds = s, s = tmp;
		tmp = oldt - q * t;
		oldt = t, t = tmp;
	}
	return { { olds, oldt }, oldr };
}
ll linearCongruence(ll a, ll b, ll n) { 
	pair<pll, ll> res = egcd(a, n);
	if (b % res.second) return -1;
	return (res.first.first + n) % n;
}
ll modInv(ll a, ll p) { 
	pair<pll, ll> res = egcd(a, p);
	if (res.second == 1) return (res.first.first + p) % p;
	else return -1;
}
int main() {
	ll N, A;
	cin >> N >> A;
	cout << N - A << ' ' << modInv(A, N);
}