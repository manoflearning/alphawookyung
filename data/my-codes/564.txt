#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#include <cassert>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define fr first 
#define sc second
#define vt vector
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)(x).size()

#define EXPAND( x ) x 
#define F_OR(i, a, b, s) for (int i = (a); (s) > 0 ? i < (b) : i > (b); i += (s))
#define F_OR1(e) F_OR(i, 0, e, 1)
#define F_OR2(i, e) F_OR(i, 0, e, 1)
#define F_OR3(i, b, e) F_OR(i, b, e, 1)
#define F_OR4(i, b, e, s) F_OR(i, b, e, s)
#define GET5(a, b, c, d, e, ...) e
#define F_ORC(...) EXPAND( GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1) )
#define FOR(...) EXPAND( F_ORC(__VA_ARGS__ )(__VA_ARGS__) )
#define EACH(x, a) for (auto& x : a)

const double EPS = 1e-9;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int dy[] = { 0, 0, 1, -1, 1, 1, -1, -1 };
const int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

const int M = 2e6;

ll n, s, a[44], sum;
ll L[4040404], R[4040404];

void bt(int idx, int ub) {
	if (idx == ub) {
		if (ub != n) L[sum + M]++;
		else R[sum + M]++;
		return;
	}

	bt(idx + 1, ub);
	sum += a[idx];
	bt(idx + 1, ub);
	sum -= a[idx];
}

int main() {

	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);

	cin >> n >> s;
	FOR(n) cin >> a[i];

	int mid = n / 2;

	bt(0, mid);
	bt(mid, n);

	ll ans = 0;
	FOR(l, -2e6, 2e6 + 1) {
		int r = s - l;
		if (r < -2e6 || 2e6 < r) continue;
		ans += L[l + M] * R[r + M];
	}

	if (s == 0) ans--;

	cout << ans;

	return 0;
}